{"version":3,"sources":["services/api.js","pages/DetailsPage.js","components/Navigation.js","pages/HomePage.js","App.js","index.js","routes.js"],"names":["baseURL","key","fetchFilmesOfHomePage","url","axios","get","fetchFilmesWithQuery","query","fetchGetInfoAboutFilm","movieId","fetchCastInfo","fetchReviewsInfo","Cast","lazy","Reviews","DetailsPage","state","filmes","handleback","props","location","history","from","push","routes","home","this","match","params","apiFetch","then","response","setState","data","className","onClick","handleGoback","src","poster_path","alt","title","release_date","substr","vote_average","overview","genres","map","item","name","id","to","path","cast","component","reviews","Component","Navigation","HomePage","componentDidMount","results","original_title","MoviesPage","App","exact","movies","Details","ReactDOM","render","StrictMode","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.0f63c489.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = `https://api.themoviedb.org`;\r\nconst key = `c066fa10c48b6ac99e7bc3c956814e9f`;\r\n\r\nconst fetchFilmesOfHomePage = () => {\r\n  let url = `${baseURL}/3/trending/movie/day?api_key=${key}`;\r\n  return axios.get(url);\r\n};\r\n\r\nconst fetchFilmesWithQuery = (query) => {\r\n  let url = `${baseURL}/3/search/movie?api_key=${key}&query=${query}`;\r\n  return axios.get(url);\r\n};\r\n\r\nconst fetchGetInfoAboutFilm = (movieId) => {\r\n  let url = `${baseURL}/3/movie/${movieId}?api_key=${key}`;\r\n  return axios.get(url);\r\n};\r\n\r\nconst fetchCastInfo = (movieId) => {\r\n  let url = `${baseURL}/3/movie/${movieId}/credits?api_key=${key}`;\r\n  return axios.get(url);\r\n};\r\n\r\nconst fetchReviewsInfo = (movieId) => {\r\n  let url = `${baseURL}/3/movie/${movieId}/reviews?api_key=${key}`;\r\n  return axios.get(url);\r\n};\r\n\r\n\r\nexport default { fetchFilmesOfHomePage, fetchFilmesWithQuery, fetchGetInfoAboutFilm, fetchCastInfo, fetchReviewsInfo };\r\n","import React, { Component, lazy } from \"react\";\r\nimport apiFetch from \"../services/api\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport routes from \"../routes\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Cast = lazy(() => import(\"../components/Cast\"));\r\nconst Reviews = lazy(() => import(\"../components/Reviews\"));\r\n\r\nclass DetailsPage extends Component {\r\n  state = {\r\n    filmes: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    apiFetch.fetchGetInfoAboutFilm(movieId).then((response) => {\r\n      this.setState(() => {\r\n        return { filmes: response.data };\r\n      });\r\n    });\r\n  }\r\n\r\n  handleback = () => {\r\n    const { location, history } = this.props;\r\n    if (location.state && location.state.from) {\r\n      history.push(location.state.from);\r\n      return;\r\n    }\r\n    history.push(routes.home);\r\n  };\r\n\r\n  render() {\r\n    const { filmes } = this.state;\r\n    const { url } = this.props.match;\r\n    const posterURL = `https://image.tmdb.org/t/p/w300`;\r\n    return (\r\n      <>\r\n        {filmes && (\r\n          <>\r\n            <button className=\"btnGoback\" onClick={this.handleGoback}>\r\n              &#8592; Go back\r\n            </button>\r\n            <div className=\"filmInfo\">\r\n              <img src={`${posterURL}${filmes.poster_path}`} alt={filmes.title} />\r\n              <div className=\"detailedInfo\">\r\n                <h2>\r\n                  {filmes.title} ({filmes.release_date.substr(0, 4)})\r\n                </h2>\r\n                <span>User score: {filmes.vote_average * 10}%</span>\r\n                <h3>Overview</h3>\r\n                <p className=\"filmOverview\">{filmes.overview}</p>\r\n                <h3>Genres</h3>\r\n                <div>\r\n                  {filmes.genres.map((item) => {\r\n                    return (\r\n                      <span className=\"genre\" key={item.id}>\r\n                        {item.name}{\" \"}\r\n                      </span>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <span>Additional information:</span>\r\n              <ul>\r\n                <li>\r\n                  <Link className=\"addInfoText\" to={`${url}/cast`}>\r\n                    Cast\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link className=\"addInfoText\" to={`${url}/reviews`}>\r\n                    Reviews\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n              <Switch>\r\n                <Route path={routes.cast} component={Cast} />\r\n                <Route path={routes.reviews} component={Reviews} />\r\n              </Switch>\r\n            </div>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nDetailsPage.propTypes = {\r\n  movieId: PropTypes.string,\r\n  url: PropTypes.string,\r\n  form: PropTypes.object,\r\n  history: PropTypes.object,\r\n};\r\n\r\nexport default DetailsPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <>\r\n      <header>\r\n        <div>\r\n          <Link className=\"navText\" to=\"/\">Home </Link>\r\n          <Link className=\"navText\" to=\"/movies\">Movies</Link>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from \"react\";\r\nimport apiFetch from \"../services/api\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    filmes: [],\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    apiFetch.fetchFilmesOfHomePage().then((response) => {\r\n      this.setState(() => {\r\n        return { filmes: response.data.results };\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filmes } = this.state;\r\n    return (\r\n      <>\r\n        <h1>Trending today</h1>\r\n        <ul>\r\n          {filmes.map((item) => {\r\n            return (\r\n              <li key={item.id}>\r\n                <Link key={item.id} to={`/movies/${item.id}`}>\r\n                  {item.original_title}\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;","  \nimport \"./App.css\";\nimport React, { lazy } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Navigation from \"./components/Navigation\";\nimport routes from \"./routes\";\nimport HomePage from \"./pages/HomePage\";\nimport DetailsPage from './pages/DetailsPage'\n\nconst MovieDetailsPage = lazy(() => import(\"./pages/DetailsPage\"));\nconst MoviesPage = lazy(() => import(\"./pages/MoviesPage\"));\n\nfunction App() {\n  return (\n    <>\n      <Navigation />\n      <Switch>\n        <Route exact path={routes.home} component={HomePage} />\n        <Route exact path={routes.movies} component={MoviesPage} />\n        <Route path={routes.Details} component={DetailsPage} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;","  \nimport React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Suspense fallback={<div>Loading...</div>}>\n        <App />\n      </Suspense>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);","const routes = {\r\n    home: \"/\",\r\n    movies: \"/movies\",\r\n    Details: \"/movies/:movieId\",\r\n    cast: \"/movies/:movieId/cast\",\r\n    reviews: \"/movies/:movieId/reviews\",\r\n  };\r\n  export default routes;"],"sourceRoot":""}